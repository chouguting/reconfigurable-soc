|DE0_CV
CLOCK_50 => CLOCK_50.IN3
CLOCK2_50 => ~NO_FANOUT~
CLOCK3_50 => ~NO_FANOUT~
CLOCK4_50 <> <UNC>
DRAM_ADDR[0] <= <GND>
DRAM_ADDR[1] <= <GND>
DRAM_ADDR[2] <= <GND>
DRAM_ADDR[3] <= <GND>
DRAM_ADDR[4] <= <GND>
DRAM_ADDR[5] <= <GND>
DRAM_ADDR[6] <= <GND>
DRAM_ADDR[7] <= <GND>
DRAM_ADDR[8] <= <GND>
DRAM_ADDR[9] <= <GND>
DRAM_ADDR[10] <= <GND>
DRAM_ADDR[11] <= <GND>
DRAM_ADDR[12] <= <GND>
DRAM_BA[0] <= <GND>
DRAM_BA[1] <= <GND>
DRAM_CAS_N <= <GND>
DRAM_CKE <= <GND>
DRAM_CLK <= <GND>
DRAM_CS_N <= <GND>
DRAM_DQ[0] <> <UNC>
DRAM_DQ[1] <> <UNC>
DRAM_DQ[2] <> <UNC>
DRAM_DQ[3] <> <UNC>
DRAM_DQ[4] <> <UNC>
DRAM_DQ[5] <> <UNC>
DRAM_DQ[6] <> <UNC>
DRAM_DQ[7] <> <UNC>
DRAM_DQ[8] <> <UNC>
DRAM_DQ[9] <> <UNC>
DRAM_DQ[10] <> <UNC>
DRAM_DQ[11] <> <UNC>
DRAM_DQ[12] <> <UNC>
DRAM_DQ[13] <> <UNC>
DRAM_DQ[14] <> <UNC>
DRAM_DQ[15] <> <UNC>
DRAM_LDQM <= <GND>
DRAM_RAS_N <= <GND>
DRAM_UDQM <= <GND>
DRAM_WE_N <= <GND>
HEX0[0] <= <GND>
HEX0[1] <= <GND>
HEX0[2] <= <GND>
HEX0[3] <= <GND>
HEX0[4] <= <GND>
HEX0[5] <= <GND>
HEX0[6] <= <GND>
HEX1[0] <= <GND>
HEX1[1] <= <GND>
HEX1[2] <= <GND>
HEX1[3] <= <GND>
HEX1[4] <= <GND>
HEX1[5] <= <GND>
HEX1[6] <= <GND>
HEX2[0] <= <GND>
HEX2[1] <= <GND>
HEX2[2] <= <GND>
HEX2[3] <= <GND>
HEX2[4] <= <GND>
HEX2[5] <= <GND>
HEX2[6] <= <GND>
HEX3[0] <= <GND>
HEX3[1] <= <GND>
HEX3[2] <= <GND>
HEX3[3] <= <GND>
HEX3[4] <= <GND>
HEX3[5] <= <GND>
HEX3[6] <= <GND>
HEX4[0] <= <GND>
HEX4[1] <= <GND>
HEX4[2] <= <GND>
HEX4[3] <= <GND>
HEX4[4] <= <GND>
HEX4[5] <= <GND>
HEX4[6] <= <GND>
HEX5[0] <= <GND>
HEX5[1] <= <GND>
HEX5[2] <= <GND>
HEX5[3] <= <GND>
HEX5[4] <= <GND>
HEX5[5] <= <GND>
HEX5[6] <= <GND>
KEY[0] => ~NO_FANOUT~
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
RESET_N => RESET_N.IN3
LEDR[0] <= <GND>
LEDR[1] <= <GND>
LEDR[2] <= <GND>
LEDR[3] <= <GND>
LEDR[4] <= <GND>
LEDR[5] <= <GND>
LEDR[6] <= <GND>
LEDR[7] <= <GND>
LEDR[8] <= <GND>
LEDR[9] <= <GND>
PS2_CLK <> <UNC>
PS2_CLK2 <> <UNC>
PS2_DAT <> <UNC>
PS2_DAT2 <> <UNC>
SD_CLK <= <GND>
SD_CMD <> <UNC>
SD_DATA[0] <> <UNC>
SD_DATA[1] <> <UNC>
SD_DATA[2] <> <UNC>
SD_DATA[3] <> <UNC>
SW[0] => SIGNAL.IN1
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
VGA_B[0] <= <GND>
VGA_B[1] <= <GND>
VGA_B[2] <= <GND>
VGA_B[3] <= <GND>
VGA_G[0] <= <GND>
VGA_G[1] <= <GND>
VGA_G[2] <= <GND>
VGA_G[3] <= <GND>
VGA_HS <= <GND>
VGA_R[0] <= <GND>
VGA_R[1] <= <GND>
VGA_R[2] <= <GND>
VGA_R[3] <= <GND>
VGA_VS <= <GND>
GPIO_0[0] <> <UNC>
GPIO_0[1] <> <UNC>
GPIO_0[2] <> <UNC>
GPIO_0[3] <> <UNC>
GPIO_0[4] <> <UNC>
GPIO_0[5] <> <UNC>
GPIO_0[6] <> <UNC>
GPIO_0[7] <> <UNC>
GPIO_0[8] <> <UNC>
GPIO_0[9] <> <UNC>
GPIO_0[10] <> <UNC>
GPIO_0[11] <> <UNC>
GPIO_0[12] <> <UNC>
GPIO_0[13] <> <UNC>
GPIO_0[14] <> <UNC>
GPIO_0[15] <> <UNC>
GPIO_0[16] <> <UNC>
GPIO_0[17] <> <UNC>
GPIO_0[18] <> <UNC>
GPIO_0[19] <> <UNC>
GPIO_0[20] <> <UNC>
GPIO_0[21] <> <UNC>
GPIO_0[22] <> <UNC>
GPIO_0[23] <> <UNC>
GPIO_0[24] <> <UNC>
GPIO_0[25] <> <UNC>
GPIO_0[26] <> <UNC>
GPIO_0[27] <> <UNC>
GPIO_0[28] <> <UNC>
GPIO_0[29] <> <UNC>
GPIO_0[30] <> <UNC>
GPIO_0[31] <> <UNC>
GPIO_0[32] <> <UNC>
GPIO_0[33] <> <UNC>
GPIO_0[34] <> <UNC>
GPIO_0[35] <> <UNC>
GPIO_1[0] <> <UNC>
GPIO_1[1] <> <UNC>
GPIO_1[2] <> <UNC>
GPIO_1[3] <> <UNC>
GPIO_1[4] <> <UNC>
GPIO_1[5] <> <UNC>
GPIO_1[6] <> <UNC>
GPIO_1[7] <> <UNC>
GPIO_1[8] <> <UNC>
GPIO_1[9] <> <UNC>
GPIO_1[10] <> <UNC>
GPIO_1[11] <> <UNC>
GPIO_1[12] <> <UNC>
GPIO_1[13] <> <UNC>
GPIO_1[14] <> <UNC>
GPIO_1[15] <> <UNC>
GPIO_1[16] <> <UNC>
GPIO_1[17] <> <UNC>
GPIO_1[18] <> <UNC>
GPIO_1[19] <> <UNC>
GPIO_1[20] <> <UNC>
GPIO_1[21] <> <UNC>
GPIO_1[22] <> <UNC>
GPIO_1[23] <> <UNC>
GPIO_1[24] <> <UNC>
GPIO_1[25] <> <UNC>
GPIO_1[26] <> <UNC>
GPIO_1[27] <> <UNC>
GPIO_1[28] <> <UNC>
GPIO_1[29] <> <UNC>
GPIO_1[30] <> <UNC>
GPIO_1[31] <> <UNC>
GPIO_1[32] <> <UNC>
GPIO_1[33] <> <UNC>
GPIO_1[34] <> <UNC>
GPIO_1[35] <> <UNC>


|DE0_CV|Low_Pass_Filter_4ENC:lpf
sig_filter <= sig_filter~reg0.DB_MAX_OUTPUT_PORT_TYPE
signal => q.DATAA
signal => sig_filter.DATAB
r_LPF_threshold_enc[0] => LessThan0.IN15
r_LPF_threshold_enc[1] => LessThan0.IN14
r_LPF_threshold_enc[2] => LessThan0.IN13
r_LPF_threshold_enc[3] => LessThan0.IN12
r_LPF_threshold_enc[4] => LessThan0.IN11
r_LPF_threshold_enc[5] => LessThan0.IN10
r_LPF_threshold_enc[6] => LessThan0.IN9
r_LPF_threshold_enc[7] => LessThan0.IN8
r_LPF_threshold_enc[8] => LessThan0.IN7
r_LPF_threshold_enc[9] => LessThan0.IN6
r_LPF_threshold_enc[10] => LessThan0.IN5
r_LPF_threshold_enc[11] => LessThan0.IN4
r_LPF_threshold_enc[12] => LessThan0.IN3
r_LPF_threshold_enc[13] => LessThan0.IN2
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => LPF_threshold.CLK
clk => reset_counter.CLK
clk => sig_filter~reg0.CLK
clk => q[0].CLK
clk => q[1].CLK
clk => q[2].CLK
clk => q[3].CLK
clk => q[4].CLK
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => q.OUTPUTSELECT
reset => sig_filter.OUTPUTSELECT
reset => reset_counter.OUTPUTSELECT
reset => LPF_threshold.OUTPUTSELECT
reset => always1.IN1


|DE0_CV|POS_EDGE_DETECTOR:ped
clk => edge_detected~reg0.CLK
clk => prev_prev_detect_signal.CLK
clk => prev_detect_signal.CLK
reset => edge_detected~reg0.ACLR
reset => prev_prev_detect_signal.PRESET
reset => prev_detect_signal.PRESET
detect_signal => prev_detect_signal.DATAIN
edge_detected <= edge_detected~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE0_CV|ENCODER_PERIOD:ep1
system_clk => current_state[0].CLK
system_clk => current_state[1].CLK
system_clk => current_state[2].CLK
system_clk => current_state[3].CLK
system_clk => current_state[4].CLK
system_clk => current_state[5].CLK
system_clk => current_state[6].CLK
system_clk => current_state[7].CLK
system_clk => current_state[8].CLK
system_clk => current_state[9].CLK
system_clk => current_state[10].CLK
system_clk => current_state[11].CLK
system_clk => current_state[12].CLK
system_clk => current_state[13].CLK
system_clk => current_state[14].CLK
system_clk => current_state[15].CLK
system_clk => current_state[16].CLK
system_clk => current_state[17].CLK
system_clk => current_state[18].CLK
system_clk => current_state[19].CLK
system_clk => current_state[20].CLK
system_clk => current_state[21].CLK
system_clk => current_state[22].CLK
system_clk => current_state[23].CLK
system_clk => current_state[24].CLK
system_clk => current_state[25].CLK
system_clk => current_state[26].CLK
system_clk => current_state[27].CLK
system_clk => current_state[28].CLK
system_clk => current_state[29].CLK
system_clk => current_state[30].CLK
system_clk => current_state[31].CLK
system_clk => current_count[0].CLK
system_clk => current_count[1].CLK
system_clk => current_count[2].CLK
system_clk => current_count[3].CLK
system_clk => current_count[4].CLK
system_clk => current_count[5].CLK
system_clk => current_count[6].CLK
system_clk => current_count[7].CLK
system_clk => current_count[8].CLK
system_clk => current_count[9].CLK
system_clk => current_count[10].CLK
system_clk => current_count[11].CLK
system_clk => current_count[12].CLK
system_clk => current_count[13].CLK
system_clk => current_count[14].CLK
system_clk => current_count[15].CLK
system_clk => current_count[16].CLK
system_clk => current_count[17].CLK
system_clk => current_count[18].CLK
system_clk => current_count[19].CLK
system_clk => current_count[20].CLK
system_clk => current_count[21].CLK
system_clk => current_count[22].CLK
system_clk => current_count[23].CLK
system_clk => current_count[24].CLK
system_clk => current_count[25].CLK
system_clk => current_count[26].CLK
system_clk => current_count[27].CLK
system_clk => current_count[28].CLK
system_clk => current_count[29].CLK
system_clk => current_count[30].CLK
system_clk => current_count[31].CLK
system_clk => encoder_count[0]~reg0.CLK
system_clk => encoder_count[1]~reg0.CLK
system_clk => encoder_count[2]~reg0.CLK
system_clk => encoder_count[3]~reg0.CLK
system_clk => encoder_count[4]~reg0.CLK
system_clk => encoder_count[5]~reg0.CLK
system_clk => encoder_count[6]~reg0.CLK
system_clk => encoder_count[7]~reg0.CLK
system_clk => encoder_count[8]~reg0.CLK
system_clk => encoder_count[9]~reg0.CLK
system_clk => encoder_count[10]~reg0.CLK
system_clk => encoder_count[11]~reg0.CLK
system_clk => encoder_count[12]~reg0.CLK
system_clk => encoder_count[13]~reg0.CLK
system_clk => encoder_count[14]~reg0.CLK
system_clk => encoder_count[15]~reg0.CLK
system_clk => encoder_count[16]~reg0.CLK
system_clk => encoder_count[17]~reg0.CLK
system_clk => encoder_count[18]~reg0.CLK
system_clk => encoder_count[19]~reg0.CLK
system_clk => encoder_count[20]~reg0.CLK
system_clk => encoder_count[21]~reg0.CLK
system_clk => encoder_count[22]~reg0.CLK
system_clk => encoder_count[23]~reg0.CLK
system_clk => encoder_count[24]~reg0.CLK
system_clk => encoder_count[25]~reg0.CLK
system_clk => encoder_count[26]~reg0.CLK
system_clk => encoder_count[27]~reg0.CLK
system_clk => encoder_count[28]~reg0.CLK
system_clk => encoder_count[29]~reg0.CLK
system_clk => encoder_count[30]~reg0.CLK
system_clk => encoder_count[31]~reg0.CLK
reset => current_state[0].ACLR
reset => current_state[1].ACLR
reset => current_state[2].ACLR
reset => current_state[3].ACLR
reset => current_state[4].ACLR
reset => current_state[5].ACLR
reset => current_state[6].ACLR
reset => current_state[7].ACLR
reset => current_state[8].ACLR
reset => current_state[9].ACLR
reset => current_state[10].ACLR
reset => current_state[11].ACLR
reset => current_state[12].ACLR
reset => current_state[13].ACLR
reset => current_state[14].ACLR
reset => current_state[15].ACLR
reset => current_state[16].ACLR
reset => current_state[17].ACLR
reset => current_state[18].ACLR
reset => current_state[19].ACLR
reset => current_state[20].ACLR
reset => current_state[21].ACLR
reset => current_state[22].ACLR
reset => current_state[23].ACLR
reset => current_state[24].ACLR
reset => current_state[25].ACLR
reset => current_state[26].ACLR
reset => current_state[27].ACLR
reset => current_state[28].ACLR
reset => current_state[29].ACLR
reset => current_state[30].ACLR
reset => current_state[31].ACLR
reset => current_count[0].ACLR
reset => current_count[1].ACLR
reset => current_count[2].ACLR
reset => current_count[3].ACLR
reset => current_count[4].ACLR
reset => current_count[5].ACLR
reset => current_count[6].ACLR
reset => current_count[7].ACLR
reset => current_count[8].ACLR
reset => current_count[9].ACLR
reset => current_count[10].ACLR
reset => current_count[11].ACLR
reset => current_count[12].ACLR
reset => current_count[13].ACLR
reset => current_count[14].ACLR
reset => current_count[15].ACLR
reset => current_count[16].ACLR
reset => current_count[17].ACLR
reset => current_count[18].ACLR
reset => current_count[19].ACLR
reset => current_count[20].ACLR
reset => current_count[21].ACLR
reset => current_count[22].ACLR
reset => current_count[23].ACLR
reset => current_count[24].ACLR
reset => current_count[25].ACLR
reset => current_count[26].ACLR
reset => current_count[27].ACLR
reset => current_count[28].ACLR
reset => current_count[29].ACLR
reset => current_count[30].ACLR
reset => current_count[31].ACLR
reset => encoder_count[0]~reg0.ACLR
reset => encoder_count[1]~reg0.ACLR
reset => encoder_count[2]~reg0.ACLR
reset => encoder_count[3]~reg0.ACLR
reset => encoder_count[4]~reg0.ACLR
reset => encoder_count[5]~reg0.ACLR
reset => encoder_count[6]~reg0.ACLR
reset => encoder_count[7]~reg0.ACLR
reset => encoder_count[8]~reg0.ACLR
reset => encoder_count[9]~reg0.ACLR
reset => encoder_count[10]~reg0.ACLR
reset => encoder_count[11]~reg0.ACLR
reset => encoder_count[12]~reg0.ACLR
reset => encoder_count[13]~reg0.ACLR
reset => encoder_count[14]~reg0.ACLR
reset => encoder_count[15]~reg0.ACLR
reset => encoder_count[16]~reg0.ACLR
reset => encoder_count[17]~reg0.ACLR
reset => encoder_count[18]~reg0.ACLR
reset => encoder_count[19]~reg0.ACLR
reset => encoder_count[20]~reg0.ACLR
reset => encoder_count[21]~reg0.ACLR
reset => encoder_count[22]~reg0.ACLR
reset => encoder_count[23]~reg0.ACLR
reset => encoder_count[24]~reg0.ACLR
reset => encoder_count[25]~reg0.ACLR
reset => encoder_count[26]~reg0.ACLR
reset => encoder_count[27]~reg0.ACLR
reset => encoder_count[28]~reg0.ACLR
reset => encoder_count[29]~reg0.ACLR
reset => encoder_count[30]~reg0.ACLR
reset => encoder_count[31]~reg0.ACLR
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
count_signal => next_state.OUTPUTSELECT
encoder_count[0] <= encoder_count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[1] <= encoder_count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[2] <= encoder_count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[3] <= encoder_count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[4] <= encoder_count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[5] <= encoder_count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[6] <= encoder_count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[7] <= encoder_count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[8] <= encoder_count[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[9] <= encoder_count[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[10] <= encoder_count[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[11] <= encoder_count[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[12] <= encoder_count[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[13] <= encoder_count[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[14] <= encoder_count[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[15] <= encoder_count[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[16] <= encoder_count[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[17] <= encoder_count[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[18] <= encoder_count[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[19] <= encoder_count[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[20] <= encoder_count[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[21] <= encoder_count[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[22] <= encoder_count[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[23] <= encoder_count[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[24] <= encoder_count[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[25] <= encoder_count[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[26] <= encoder_count[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[27] <= encoder_count[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[28] <= encoder_count[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[29] <= encoder_count[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[30] <= encoder_count[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_count[31] <= encoder_count[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE


